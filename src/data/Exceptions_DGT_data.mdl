##########################################################
################ MODIFICATIONS EVAL SNBC3 ################
##########################################################



#### CALAGE DU MODELE ####

@over GR_GDP_tgt := REAL_GDP_GROWTH_DGT
@over X_exo_23 := @elem(X_23, %baseyear) * REAL_GDP_INDEX_DGT
@over MATD[cm, s] := SUPPLY_USE_DOM($cm,(NELEMSET(1,1)+1)+NELEMSET(5,1)+NELEMSET(7,1)+$s) * REAL_GDP_INDEX_DGT
@over MATM[cm, s] := SUPPLY_USE_FOREIGN(+$cm,1+NELEMSET(5,1)+NELEMSET(7,1)+$s) * REAL_GDP_INDEX_DGT
@over IRVE := (500 * @elem(vehicles_elec, %baseyear) /1000) * REAL_GDP_INDEX_DGT    
 @over EXP_HOUSING_Val[h, ecl] := @elem(DEBT_REHAB_Val[h, ecl]{-1} * (R_I_REHAB[h, ecl]{-1} + R_RMBS_REHAB[h, ecl]{-1}) + _
      	       	   	         R_CASH_REHAB[h, ecl] * PREHAB[h, ecl] * REHAB[h, ecl] + _
	       			 DEBT_NewB_Val[h, ecl]{-1} * (R_I_NewBUIL[h, ecl]{-1} + R_RMBS_NewBUIL[h, ecl]{-1}) + _
	       			 R_CASH_NewBUIL[h, ecl] * PNewBUIL[h, ecl] * NewBUIL[h, ecl] + _
	       			 PENER_BUIL[h, ecl] * ENER_BUIL[h, ecl] + choc_PAC_VAL[ecl], %baseyear) * _
	                   NOM_GDP_INDEX_DGT
@over  I_NE_n[s] :=   @elem(K_NE[s]-K_NE[s]{-1}*(1-tdec[s]), %baseyear) * REAL_GDP_INDEX_DGT
@over  I_MDE_n[s] :=  @elem(K_E[s]-K_E[s]{-1}*(1-tdec[s]), %baseyear) * REAL_GDP_INDEX_DGT
@over  Trucks[22,15] := 82005.4719/1000 * REAL_GDP_INDEX_DGT                     
@over  Trucks[23,15] := 364.9620/1000  * REAL_GDP_INDEX_DGT                   
@over  Trucks[24,15] := 1000.4506/1000 * REAL_GDP_INDEX_DGT                    
@over  Trucks[22,16] :=  577506.7533/1000 * REAL_GDP_INDEX_DGT               
@over  Trucks[23,16] :=  1000/1000 * REAL_GDP_INDEX_DGT                
@over  Trucks[24,16] :=  1000/1000 * REAL_GDP_INDEX_DGT  
@over  LUV[22,16] := 5117014.9322/1000 * REAL_GDP_INDEX_DGT
@over  LUV[23,16]:= 1000/1000 * REAL_GDP_INDEX_DGT
@over  LUV[24,16] := 1000/1000 * REAL_GDP_INDEX_DGT
@over  E_spe[ce,16] := @elem(E_oth[ce,16] -E_LUV_n[ce,16] - E_Trucks_n[ce,16] ,%baseyear) * REAL_GDP_INDEX_DGT  if Q_Mtep_sec[ce,16] <>0 
@over  E_spe[ce,15] := @elem(E_oth[ce,15] - E_Trucks_n[ce,15] ,%baseyear) * REAL_GDP_INDEX_DGT  if Q_Mtep_sec[ce,15] <>0                       
@over  Vehicles_elec := (auto_elec + sum(trucks[23,road] on road) + sum(LUV[23,road] on road)) * REAL_GDP_INDEX_DGT
@over EXP_HOUSING_Val[h, ecl] := @elem(DEBT_REHAB_Val[h, ecl]{-1} * (R_I_REHAB[h, ecl]{-1} + R_RMBS_REHAB[h, ecl]{-1}) +    R_CASH_REHAB[h, ecl] * RENOV_VAL[ecl] +  DEBT_NewB_Val[h, ecl]{-1} * (R_I_NewBUIL[h, ecl]{-1} + R_RMBS_NewBUIL[h, ecl]{-1}) +  R_CASH_NewBUIL[h, ecl] * PNewBUIL[h, ecl] * NewBUIL[h, ecl] +  PENER_BUIL[h, ecl] * ENER_BUIL[h, ecl], %baseyear) * NOM_GDP_INDEX_DGT
@over DEBT_REHAB_Val[h, ecl] := @elem(R_LOAN_REHAB[h, ecl] * (1 + NOM_GDP_GROW_DGT) / _
		                (NOM_GDP_GROW_DGT + R_RMBS_REHAB[h, ecl]) * PREHAB[h, ecl] * REHAB[h, ecl], %baseyear) * _
		          NOM_GDP_INDEX_DGT
@over DEBT_NewB_Val[h, ecl] := @elem(R_LOAN_NewBUIL[h, ecl] * (1 + NOM_GDP_GROW_DGT) / _
 		     	       (NOM_GDP_GROW_DGT + R_RMBS_NewBUIL[h, ecl]) * PNewBUIL[h, ecl] * NewBUIL[h, ecl], %baseyear) * _
			  NOM_GDP_INDEX_DGT
@over EXP_13_OTH_VAL := @elem(PEXP_13 * EXP_13 - (PNEWBUIL * NEWBUIL + PREHAB * REHAB), %baseyear) * NOM_GDP_INDEX_DGT
@over DEBT_AUTO_VAL[h, ecl] := @elem(R_LOAN_AUTO[h, ecl] * (1 + NOM_GDP_GROW_DGT) / _
		      	       (NOM_GDP_GROW_DGT + R_RMBS_AUTO[h, ecl]) * PNewAUTO[h, ecl] * NewAUTO[h, ecl] * (1 - R_SUB_AUTO[h, ecl]), %baseyear) * _
			  NOM_GDP_INDEX_DGT
@over EXP_MOBAUTO_Val[h, ecl] := @elem(DEBT_AUTO_Val[h, ecl]{-1} * (R_I_AUTO[h, ecl]{-1} + R_RMBS_AUTO[h, ecl]{-1}) + _
		   	         R_CASH_AUTO[h, ecl] * PNewAUTO[h, ecl] * NewAUTO[h, ecl] * (1 - R_SUB_AUTO[h, ecl]) + _
				 PEXP_AUTO[h, ecl] * EXP_AUTO[h, ecl], %baseyear) *_
   			   NOM_GDP_INDEX_DGT
@over PNewAUTO[h,c] := @elem(PNewAUTO_th[h,c],%baseyear) * PRICE_INDEX_DGT   where c in %list_ener_class \ CA
@over PENER_AUTOelec[h,pcl] :=  (AUTO_elec[h,pcl]>0) * @elem(pch[23] *EXP_AUTO_elec[h,pcl] / AUTO_elec[h,pcl], %baseyear)* PRICE_INDEX_DGT   
@over UC_M_auto_elec[h] := @elem((HOUSEHOLD_HYBRID_AUTO(218,1)/100*km_auto[h]/auto[h])/1000,%baseyear)*PRICE_INDEX_DGT
@over UC_M_auto_th[h]:= @elem((HOUSEHOLD_HYBRID_AUTO(219,1)/100*km_auto_th[h]/(auto[h]-auto_elec[h]))/1000,%baseyear)*PRICE_INDEX_DGT
@over GR_PROG_L := PROG_L_GROWTH_DGT
@over EXP_03_OTH_VAL := (household(5,1) - @elem(sum(PAUTO_elec[h,pcl]* NewAUTO_elec[h,pcl] on pcl)+ sum(PNewAUTO_th[h,ecl]* NewAUTO_th[h,ecl] on ecl),%baseyear)) * NOM_GDP_INDEX_DGT
@over S_HH := @elem(DISPINC_VAL - EXP_HH_Val, %baseyear) * NOM_GDP_INDEX_DGT
@over Stock_S := S_HH * (1 + NOM_GDP_GROW_DGT) / NOM_GDP_GROW_DGT  
@over DSD_base[c] := SUPPLY_USE_DOM($c,(NELEMSET(1,1)+1)+NELEMSET(5,1)+NELEMSET(7,1)+NELEMSET(1,1)+5) * REAL_GDP_INDEX_DGT
@over DSM_base[c] := SUPPLY_USE_FOREIGN($c,1+NELEMSET(5,1)+NELEMSET(7,1)+NELEMSET(1,1)+5) * REAL_GDP_INDEX_DGT


#### AUTRES VERIFICATIONS ####

verif_CH_val := PCH * CH - (sum(PCH[c] * CH[c] on c))
Verif_G_val := PG * G - (sum(PG[c] * G[c] on c))  
Verif_I_val := PI * I - (sum(PI[c] * I[c] on c)) 
verif_X_val := PX * X - (sum(PX[c] * X[c] on c))
verif_DS_val := PDS * DS - (sum(PDS[c] * DS[c] on c))
verif_M_val := PM * M - (sum(PM[c] * M[c] on c)) 

#### Modification pour tableaux de sorties ####

MAT := sum (MAT[s] if MAT[s]<>0 on s)
PMAT := sum (PMAT[s]*MAT[s] if MAT[s]<>0 on s)

w_s_spb:= sum(W_S[s]*(1 + TCSE[s])*L_S[s]/L_s on s)
w_spb := w_s_spb * L_s/L + w_se*L_se/L

CL_S_bis[s] :=  CL_S[s]* PROG_L[s] 
CL_SE_bis[s] := CL_SE[s]* PROG_L[s] 
CL_S_bis := (sum(CL_S_bis[s] * L_S[s] on s))/L_S
CL_SE_bis := (sum(CL_SE_bis[s] * L_SE[s] on s))/L_SE
CL_bis  * L  := ( CL_S_bis  * L_S  + CL_SE_bis  * L_SE )

##### MODIFICATION DU COUT DU CAPITAL #####

@over CK[s] := PK[s] * (  R[s] - d(P)/P{-1} + Tdec[s]) if K[s] > 0

##### INVESTISSEMENT ##### 

# ajout des intérêts au stock de dette des ménages (uniquement pour affichage, cahier de variantes)
# pour le GOV ils sont inclus dans le deficit qui est utilise pour calculer la dette
DEBT_REHAB_Val_tot[h,ecl] :=  DEBT_REHAB_Val[h,ecl] 
DEBT_NewB_Val_tot[h,ecl] :=  DEBT_NewB_Val[h,ecl] 
DEBT_AUTO_Val_tot[h,ecl] := DEBT_AUTO_Val[h,ecl]

#### PRIX DES IMPORTATIONS ####

YQS_SM := sum(YQS[cbienmar] on cbienmar)
PYQS_SM := sum(YQS[cbienmar]*PYQS[cbienmar]/YQS_SM on cbienmar)
GRPM_01:=0
GRPM[sind]:=0
GRPM[cservex]:=0
GRPM[ce]:=0
PM_n_01 := PM_01
PM_n[cservex] :=  PM[cservex]
PM_n[ce] := PM[ce]
PM_n[sind] := PM[sind]


#### TAUX DE MARGE DE THREEME V3 ####

#YCAP_test[sne] := Y[sne] / 0.8 ### calibrage de ThreeME V3
YCAP[sne] := Y[sne] / 0.8 ### calibrage de ThreeME V3
#CUR[sne] := Y[sne] / YCAP[sne]
CUR_test[sne] := Y[sne] / YCAP[sne]



PXD_n[c] := P 


##### salaires #####
#prix de VA anticipe
pva_e := p


#### AJOUTS CHOCS DGT POUR CAHIER DE VARIANTES####

CHOC_K := 0
CHOC_PGF := 0 
CHOC_L := 0
CHOC_E := 0
choc_fossile[ce2]:=0

IMP_BUD_niv[sne]:=0
IA_notionnel_noshock[sne]:=IA_n[sne]
IA_notionnel[sne]:=IA_n[sne]
IA_n_noshock[sne]:=IA_n[sne]
IA_n_noshock_03[road] := IA_n_03[road]
IA_n_noshock_12[road] := IA_n_12[road]
IA_des_noshock[sne] := IA_n[sne]


#### CORRECTION FORMULE RATIO D'UTILISATION DES CAPACITES
phi_n_K[sne] := phi_K[sne]
phi_n_L[sne] := phi_L[sne]
phi_n_E[sne] := phi_E[sne]
phi_n_MAT[sne] := phi_MAT[sne]


#### arbitrage consommation en volume
EXP_CES_VOL := sum((EXP_n[co, h] - NEXP[co, h] ) on co)

MATM_des_n[cdai,sne] := MATM[cdai,sne]
MATM_des[cdai,sne] := MATM[cdai,sne]
MATM_des_n[cservex,sne] := MATM[cservex,sne]
MATM_des[cservex,sne] := MATM[cservex,sne]
EM_des_n[eno21,s] := EM[eno21,s]
EM_des[eno21,s] := EM[eno21,s]
CHM_des_n[cdai] := CHM[cdai]
CHM_des[cdai] := CHM[cdai]
CHM_des_n[cservex] := CHM[cservex]
CHM_des[cservex] := CHM[cservex]
CHM_des_n[cepeg] := CHM[cepeg]
CHM_des[cepeg] := CHM[cepeg]
GM_des_n[cdai] := GM[cdai]
GM_des[cdai] := GM[cdai]
GM_n[cservex] := GM[cservex]
IAM_des_n[cdai,sne] := IAM[cdai,sne]
IAM_des[cdai,sne] := IAM[cdai,sne]
IAM_des_n[cservex,sne] := IAM[cservex,sne]
IAM_des[cservex,sne] := IAM[cservex,sne]

 MAT_bis_dgt[cdai,sne] := MATD[cdai,sne] + MATM[cdai,sne] 
 verif_MAT_dgt[cdai,sne] := 0
 MAT_bis_dgt[cservex,sne] := MATD[cservex,sne] + MATM[cservex,sne] 
 verif_MAT_dgt[cservex,sne] := 0
 E_bis_dgt[eno21,s] := ED[eno21,s] + EM[eno21,s]
 verif_E_dgt[eno21,s] := 0
 CH_bis_dgt[cdai] := CHD[cdai] + CHM[cdai]
 verif_CH_dgt[cdai] := 0
 CH_bis_dgt[cservex] := CHD[cservex] + CHM[cservex]
 verif_CH_dgt[cservex] := 0
 CH_bis_dgt[cepeg] := CHD[cepeg] + CHM[cepeg]
 verif_CH_dgt[cepeg] := 0
 G_bis_dgt[cdai] := GD[cdai] + GM[cdai]
 verif_G_dgt[cdai] := 0
 G_bis_dgt[cservex] := GD[cservex] + GM[cservex]
 verif_G_dgt[cservex] := 0
 IA_bis_dgt[cdai,sne] := IAD[cdai,sne] + IAM[cdai,sne]
 verif_IA_dgt[cdai,sne] := 0
 IA_bis_dgt[cservex,sne] := IAD[cservex,sne] + IAM[cservex,sne]
 verif_IA_dgt[cservex,sne] := 0
 
 Choc_CSC_niv[sne] := CSC_cost * EMS_CSC[sne] #ajout car variable non initialisee jusqu a present
 Choc_DACCS_niv  := DACCS_cost * EMS_DACCS #ajout car variable non initialisee jusqu a present
 Kexo[se23] := 0 #ajout car variable non initialisee jusqu a present
 
 W_S_des[sne] := W_S[sne]
 
 L_des[sne] := L[sne]

 PY_des[s] := PY[s]
 
 EXP_des[co,h] := EXP[co,h]
 
 L_SM := L - L_20
 W_SM * L_SM := sum(W_S[s] * L_S[s] + W_SE[s] * L_SE[s] on s in %list_sec_Market)

 PRESOC_DOM_U_TETE_DES := PRESOC_DOM_U_VAL / Un_TOT
 PRESOC_DOM_U_VAL_DES := PRESOC_DOM_U_TETE_DES * Un_TOT
 PRESOC_DOM_Oth_VAL_DES := PRESOC_DOM_Oth_VAL
 
 X_n_des[c] := X[c]
 X_des[c] := X[c]
 
 #### VAC
defl_Ttco[ce2] := 1

DEBT_SNF_VAL[s] := 0
DEBT_SNF_VAL := sum(DEBT_SNF_VAL[s] on s)
R_SNF[s] := R[s]
DEBT_SNF_ENER := sum(DEBT_SNF_VAL[se] on se)

IA_n_des[sne] := IA_n[sne]
IMP_BUD_niv_bis[sne] := 0

IA_n_bis_19 := IA_n_noshock_19
I_MDE_notionnel_19 := I_MDE_19
I_MDE_shock_exo_19 := 0
IA_n_bis_20 := IA_n_noshock_20
I_MDE_notionnel_20 := I_MDE_20
I_MDE_shock_exo_20 := 0

@over Inv_IRVE := IRVE - (1 - tdec_IRVE) * IRVE{-1}


R_exo := 0
R_exo[s]:=0

IA_notionnel_noshock[se] := IA_n[se]
IA_n_des[se] := IA_n[se]
Choc_CSC_niv[se] := CSC_cost * EMS_CSC[se]
IA_notionnel[se] := IA_n[se]
IMP_BUD_niv_bis[se] := 0
IMP_BUD_niv[se] := 0

###MPR###
MATM_sec[sne] := sum(MATM[cdai,sne] on cdai) + sum(MATM[cservex,sne] on cservex)
EM_sec[s] := sum(EM[eno21,s] on eno21)

@over EXP_HOUSING_Val[h, ecl] := @elem(DEBT_REHAB_Val[h, ecl]{-1} * (R_I_REHAB[h, ecl]{-1} + R_RMBS_REHAB[h, ecl]{-1}) +    R_CASH_REHAB[h, ecl] * RENOV_VAL[ecl] +  DEBT_NewB_Val[h, ecl]{-1} * (R_I_NewBUIL[h, ecl]{-1} + R_RMBS_NewBUIL[h, ecl]{-1}) +  R_CASH_NewBUIL[h, ecl] * PNewBUIL[h, ecl] * NewBUIL[h, ecl] +  PENER_BUIL[h, ecl] * ENER_BUIL[h, ecl], %baseyear) * (1 + STEADYSTATE(1, 1)) ^ (@year - %baseyear)

@over DISPINC_VAL[h] := DISPINC_AI_VAL[h] - IR_VAL[h] - AIC_VAL[h] + REDIS_VAL_H + SUB_AUTO_VAL + SUB_REHAB_VAL  


PREHAB_H01_HS := RENOV_VAL/REHAB_H01
EXP_13_des :=  @elem(PNewBUIL_H01  , 2006)  * NewBUIL_H01  + @elem(PREHAB_H01_HS, 2006)  * REHAB_H01  + (EXP_13_OTH_Val_H01 )/ PCH_13 + choc_PAC

@over EXP_13_H01  := EXPexo[13]

@over R_CASH_REHAB[h,ecl]:=0.7


IMP_BUD_niv_MDE[sne] := 0

#### Correction calcul des couts unitaires de production ####

PE_CEE[s] := CEE[s]/(Ener[s] + 0.0001)
PE_CEE_n[s] := CEE[s]/(E_n[s] + 0.0001)
CU_n_des[s] := CU_n[s]
CU_des[s] := CU[s]
CU_n_bis[s] := CU_n[s]
CU_bis[s] := CU[s]

phi_k_bis[s] := (CK[s] * K[s])/(CK[s] * K[s] + CL[s] * L[s] * PROG_L[s] + (PEner[s] + PE_CEE[s]) * Ener[s] + PMAT[s] * MAT[s])
phi_l_bis[s] := (CL[s] * PROG_L[s] * L[s])/(CK[s] * K[s] + CL[s] * L[s] * PROG_L[s] + (PEner[s] + PE_CEE[s]) * Ener[s] + PMAT[s] * MAT[s])
phi_e_bis[s] := ((PEner[s] + PE_CEE[s]) * Ener[s])/(CK[s] * K[s] + CL[s] * L[s] * PROG_L[s] + (PEner[s] + PE_CEE[s]) * Ener[s] + PMAT[s] * MAT[s])
phi_mat_bis[s] := (PMAT[s] * MAT[s])/(CK[s] * K[s] + CL[s] * L[s] * PROG_L[s] + (PEner[s] + PE_CEE[s]) * Ener[s] + PMAT[s] * MAT[s])

PE_signal_bis[s] := 0
PE_signal_E[s] := 0

Yprod[sne] := Y[sne] ### calibrage de ThreeME V3

CUR_bis[sne] := Yprod[sne]/YCAP[sne]

TMD_bis[sne] := TMD_n[sne]

YCAP := sum(YCAP[sne] on sne)
CUR_bis := Y/YCAP
CUR_test := CUR_bis

#### MODIFICATION DEMANDE ENERGETIQUE DANS LES SERVICES ####


E_shock_exo[ster] := 0


#### DEFINITION DES CUR CIBLES CALES A 2019 ####

CUR_cible_01 :=	0.777741577
CUR_cible_02 :=	0.783971925
CUR_cible_03 :=	0.76175078
CUR_cible_04 :=	0.74254332
CUR_cible_05 :=	0.74277388
CUR_cible_06 :=	0.718639243
CUR_cible_07 :=	0.806183467
CUR_cible_08 :=	0.850908755
CUR_cible_09 :=	0.720339859
CUR_cible_10 :=	0.702189979
CUR_cible_11 :=	0.713235837
CUR_cible_12 :=	0.80404346
CUR_cible_13 :=	0.798908128
CUR_cible_14 :=	0.769930736
CUR_cible_15 :=	0.755683113
CUR_cible_16 :=	0.727553748
CUR_cible_17 :=	1.044069802
CUR_cible_18 :=	0.80231285
CUR_cible_19 :=	0.805842549
CUR_cible_20 :=	0.814447291
CUR_cible := 0.782153515

alpha_PROG_E_PE[s] := 0



#### MODIFICATION EQUATIONS RECETTES PUBLIQUES ####

RF_NET_20 := @elem(PRF_20{-1} , 2006)  * RF_20{-1}  - IS_20

PRF_NET_20 := 1

I_MDE_notionnel[se] := I_MDE[se]
I_MDE_shock_exo[se] := 0


#### EXCEPTIONS SUPPLEMENTAIRES POUR LA VAC ####
  
@over REDIS_VAL_SEC := TCO_VAL_SEC

EMS_CSC[ce2, s] := 0 
@over EMS_CSC[s] := 0
share_EMS_CSC[ce2, s] := 0
EMS_SEC_horsCSC[ce2, s] := EMS_SEC[ce2, s]
share_ems_csc[s] := 0
csc_cost[s] := 0

PE_Signal_bis[ce, s] := 0
PE_bis[ce, s] := PE[ce, s] if E[ce, s] <> 0

PEner_bis[s] := PEner[s] if Ener[s] <> 0

kappa_mat_dgt[trsp, s] := (PMAT[trsp, s] * MAT[trsp, s] / (PMAT[s] * MAT[s])) where (trsp) in (%list_trsp)
kappa_X|O1|_dgt[c] := (PX|O1|[c] * X|O1|[c] / (PX[c] * X[c])) if X[c] <> 0 where O1 in (D M)
kappa_e_dgt[ce, s] := (PE[ce, s] * E[ce, s]/ (PE[s] * E[s])) if E[s] <> 0


#### MODIFICATION DYNAMIQUE DES PRESTATIONS ####

 PRESOC_DOM_U_TETE_shock := 0
 PRESOC_DOM_Oth_shock := 0



#### MODIFICATIONS FISCALITE CARBONE ####

REC_VAL_SEC_TCO[ce2, s] := Ttco[ce2] * PCH * EMS_SEC[ce2, s] * (1 - EXO[ce2, s])
REC_VAL_SEC_ETS[ce2, s] := PE_signal_ETS * PCH * EMS_SEC[ce2, s] * EXO[ce2, s] 
REC_VAL_SEC_ETS2[ce2, s] := ETS2[s] * PCH * EMS_SEC[ce2, s] * (1 - EXO[ce2, s]) 

ETS2[s] := ETSexo2[s] 
ETSexo2[s] := 0 

ETS2_hh[ce2]:= ETSexo2_hh[ce2]
ETSexo2_hh[ce2] := 0

REC_VAL_SEC_TCO[s] := sum(REC_VAL_SEC_TCO[ce2, s] on ce2)
REC_VAL_SEC_ETS[s] := sum(REC_VAL_SEC_ETS[ce2, s] on ce2) 
REC_VAL_SEC_ETS2[s] := sum(REC_VAL_SEC_ETS2[ce2, s] on ce2) 

REC_VAL_SEC_TCO := sum(REC_VAL_SEC_TCO[s] on s)
REC_VAL_SEC_ETS := sum(REC_VAL_SEC_ETS[sets] on sets)
REC_VAL_SEC_ETS2 := sum(REC_VAL_SEC_ETS2[sets2] on sets2) 

#REC_VAL_HH := TCO_VAL_HH
REDIS_VAL_TCO_H := REC_VAL_TCO_HH
REDIS_VAL_SEC_TCO := REC_VAL_SEC_TCO
REDIS_VAL_SEC_TCO[s] := REC_VAL_SEC_TCO[s]

REDIS_VAL_SEC_ETS := REC_VAL_SEC_ETS
REDIS_VAL_SEC_ETS[s] := REC_VAL_SEC_ETS[s]

REDIS_VAL_ETS2_H := REC_VAL_ETS2_HH

REDIS_VAL_SEC_ETS2 := REC_VAL_SEC_ETS2
REDIS_VAL_SEC_ETS2[s] := REC_VAL_SEC_ETS2[s]

REC_VAL_TCO_HH[ce2] := ttco[ce2] * pch * ems_hh[ce2, h]
REC_VAL_TCO_HH := sum(REC_VAL_TCO_HH[ce2] on ce2)
REC_VAL_ETS2_HH[ce2] := ETS2[s] * pch * ems_hh[ce2, h]
REC_VAL_ETS2_HH := sum(REC_VAL_ETS2_HH[ce2] on ce2)

choc_IR := 0
choc_IS := 0

csc_cost_exo := 0
cost_csc_niv[s] := 0.001
EMS_DACCS[s] := 0
EMS_BECCS[s] := 0
@over Choc_CSC_niv[s] := 0.001

@over R_CASH[h,ecl]:=0.7
# pour aligner les calcul du coût d'usage en energie de rester dans la meme classe sur celui de changer de classe (change peu les resultats)

# pour les CEE
RENOV_VAL_apCEE[ecl] := sum(PREHAB_h01[ecl,ecl2]*(1 - R_SUB_CEE[h,ecl,ecl2])*REHAB_h01[ecl,ecl2] if REHAB_h01[ecl,ecl2] <> 0 on ecl2)
RENOV_VAL_apCEE := (sum( sum(PREHAB_h01[ecl,ecl2]* (1 - R_SUB_CEE[h,ecl,ecl2])* REHAB_h01[ecl,ecl2] if REHAB_h01[ecl,ecl2] <> 0 on ecl2) on ecl))  

# taux de marge des secteurs energetiques
YCAP[se] := Y[se] / 0.8 ### calibrage de ThreeME V3
CUR_test[se] := Y[se] / YCAP[se]
Yprod[se] := Y[se] ### calibrage de ThreeME V
CUR_bis[se] := Yprod[se]/YCAP[se]
phi_n_L[se] := phi_L[se]
phi_n_K[se] := phi_K[se]
phi_n_E[se] := phi_E[se]
phi_n_MAT[se] := phi_MAT[se]
#DEFINITION DES CUR CIBLES CALES A 2019 (valeur de cur_test en 2019)
CUR_cible_21 :=	0.7960542509
CUR_cible_2201 :=	0.7970700386
CUR_cible_2202 :=	0.8148920426
CUR_cible_2301 :=	0.7975405795
CUR_cible_2302 :=	0.7243146969
CUR_cible_2303 :=	0.807388667
CUR_cible_2304 :=	0.7627310031
CUR_cible_2305 :=	0.9257131437
CUR_cible_2306 :=	0.9348779429
CUR_cible_2307 :=	0.8038836327
CUR_cible_2308 :=	0.8239955263
CUR_cible_2401 :=	0.7740631886
CUR_cible_2402 :=	0.6424176519
CUR_cible_2403 :=	0.6905822139
CUR_cible_2404 :=	0.7734564087
CUR_cible_2405 :=	0.7883688479
CUR_cible_2406 :=	0.8739363976


# choc financement par PO
choc_css := 0
choc_css_se := 0
choc_cse := 0
choc_tcss := 0
choc_tcss_se := 0
choc_tcse[s] := 0
choc_tcse := 0
choc_IS[s]:=0

W_S_des_n[sne] := W_S_n[sne]

W_S_dgt[s] := W_S[s]
W_S_ademe[s] := W_S[s]

CIdgt[s] := E[s] + MAT[s]
PCIdgt[s] * CIdgt[s] := PE[s] * E[s] + PMAT[s] * MAT[s]